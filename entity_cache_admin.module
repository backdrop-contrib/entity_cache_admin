<?php
/**
 * @file
 * Provides an administrative interface for selectively disabling caching for
 * selected entity/bundle combinations.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function entity_cache_admin_form_system_performance_settings_alter(&$form, &$form_state, $form_id) {
  $form['clear_cache']['#weight'] = 0;
  $form['caching']['#title'] = t('Page caching');
  $form['caching']['#weight'] = 1;

  $config = config('entity_cache_admin.settings');
  $form['entity_cache'] = array(
    '#type' => 'fieldset',
    '#title' => t('Entity caching'),
    '#weight' => 2,
  );
  $form['entity_cache'][] = array(
    '#type' => 'help',
    '#markup' => t('All entities are cached by default. Uncheck any entity/bundle combination to disable its caching. (Note that other modules can also disable caching for selected entities beyond what is set here, i.e., even if an entity/bundle combination is checked here, another module might have disabled caching for it.)'),
  );
  $entity_info = entity_get_info();
  foreach ($entity_info as $entity_type => $info) {
    $form['entity_cache'][$entity_type] = array(
      '#type' => 'fieldset',
      '#title' => $info['label'],
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    foreach ($info['bundles'] as $bundle_name => $bundle) {
      $entity_bundle_key = $entity_type . ':' . $bundle_name;
      $default_value = $config->get($entity_bundle_key);
      if (is_null($default_value)) {
        // New entity/bundles (e.g., from newly added modules, so not yet stored
        // in config) should be checked by default.
        $default_value = TRUE;
      }
      $form['entity_cache'][$entity_type][$entity_bundle_key] = array(
        '#type' => 'checkbox',
        '#title' => $bundle['label'],
        '#default_value' => $default_value,
        '#config' => 'entity_cache_admin.settings',
      );
    }
  }
  $form['bandwidth_optimization']['#weight'] = 3;
}

/**
 * Implements hook_entity_info_alter().
 */
function entity_cache_admin_entity_info_alter(&$entity_info) {
  foreach ($entity_info as $entity_type => &$info) {
    foreach ($info['bundles'] as $bundle_name => &$bundle) {
      $entity_bundle_key = $entity_type . ':' . $bundle_name;
      $bundle_cache = config_get('entity_cache_admin.settings', $entity_bundle_key);
      if (is_null($bundle_cache)) {
        $bundle_cache = TRUE;
      }
      if (isset($bundle['bundle cache'])) {
        // Other modules may have already set 'bundle cache' to FALSE; don't
        // override that.
        $bundle['bundle cache'] &= $bundle_cache;
      }
      elseif (!$bundle_cache) {
        // Only need to set the flag if we're setting it to FALSE, since the
        // default for an unset value is TRUE.
        $bundle['bundle cache'] = $bundle_cache;
      }
    }
  }
}

/**
 * Implements hook_config_info().
 */
function entity_cache_admin_config_info() {
  $prefixes['entity_cache_admin.settings'] = array(
    'label' => t('Entity Cache UI settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}
